  {
  "name": "code-review-notes",
  "displayName": "Code Review Notes",
  "description": "A powerful VS Code extension for code review with flexible sync system, multi-user collaboration, resolver tracking, and user-specific color coding",
  "version": "0.1.6",
  "publisher": "renyumeng",
  "author": {
    "name": "renyumeng",
    "email": "renyumeng123@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/renyumeng1/vscode-code-review-notes.git"
  },
  "bugs": {
    "url": "https://github.com/renyumeng1/vscode-code-review-notes/issues"
  },
  "homepage": "https://github.com/renyumeng1/vscode-code-review-notes#readme",
  "keywords": [
    "code review",
    "comments",
    "collaboration",
    "annotation",
    "overleaf",
    "review notes",
    "multi-user",
    "resolver tracking"
  ],
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other",
    "Notebooks",
    "Debuggers"
  ],
  "galleryBanner": {
    "color": "#0078d4",
    "theme": "dark"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "code-review-notes.addComment",
        "title": "Add Comment",
        "category": "Code Review Notes"
      },
      {
        "command": "code-review-notes.replyToComment",
        "title": "Reply to Comment",
        "category": "Code Review Notes"
      },
      {
        "command": "code-review-notes.resolveComment",
        "title": "Resolve Comment",
        "category": "Code Review Notes"
      },
      {
        "command": "code-review-notes.unresolveComment",
        "title": "Unresolve Comment",
        "category": "Code Review Notes"
      },
      {
        "command": "code-review-notes.refreshComments",
        "title": "Refresh Comments",
        "category": "Code Review Notes",
        "icon": "$(refresh)"
      },
      {
        "command": "code-review-notes.goToComment",
        "title": "Go to Comment",
        "category": "Code Review Notes"
      },
      {
        "command": "code-review-notes.showAllComments",
        "title": "Show All Comments",
        "category": "Code Review Notes",
        "icon": "$(list-unordered)"
      },
      {
        "command": "code-review-notes.showResolvedComments",
        "title": "Show Resolved Comments",
        "category": "Code Review Notes",
        "icon": "$(check)"
      },
      {
        "command": "code-review-notes.showUnresolvedComments",
        "title": "Show Unresolved Comments",
        "category": "Code Review Notes",
        "icon": "$(issues)"
      },
      {
        "command": "code-review-notes.toggleCommentHighlights",
        "title": "Toggle Comment Highlights",
        "category": "Code Review Notes",
        "icon": "$(highlight)"
      },
      {
        "command": "code-review-notes.toggleResolvedHighlights",
        "title": "Toggle Resolved Comment Highlights",
        "category": "Code Review Notes",
        "icon": "$(eye)"
      },
      {
        "command": "code-review-notes.createTestComments",
        "title": "Create Test Comments (for Demo)",
        "category": "Code Review Notes",
        "icon": "$(beaker)"
      },
      {
        "command": "code-review-notes.setUsername",
        "title": "Set Username",
        "category": "Code Review Notes",
        "icon": "$(person)"
      },
      {
        "command": "code-review-notes.syncComments",
        "title": "Sync Comments to Git",
        "category": "Code Review Notes",
        "icon": "$(sync)"
      },
      {
        "command": "code-review-notes.loadCommentsFromGit",
        "title": "Load Comments from Git",
        "category": "Code Review Notes",
        "icon": "$(cloud-download)"
      },
      {
        "command": "code-review-notes.enableAutoSync",
        "title": "Enable Auto Sync",
        "category": "Code Review Notes",
        "icon": "$(settings-sync-view-icon)"
      },
      {
        "command": "code-review-notes.showSyncMethodPicker",
        "title": "Choose Sync Method",
        "category": "Code Review Notes",
        "icon": "$(gear)"
      },
      {
        "command": "code-review-notes.performFullSync",
        "title": "Sync Now",
        "category": "Code Review Notes",
        "icon": "$(sync)"
      },
      {
        "command": "code-review-notes.getSyncStatus",
        "title": "Get Sync Status",
        "category": "Code Review Notes",
        "icon": "$(info)"
      },
      {
        "command": "code-review-notes.deleteComment",
        "title": "Delete Comment",
        "category": "Code Review Notes",
        "icon": "$(trash)"
      },
      {
        "command": "code-review-notes.addCommentToLine",
        "title": "Add Comment to Line",
        "category": "Code Review Notes",
        "icon": "$(comment-add)"
      },
      {
        "command": "code-review-notes.addCommentInline",
        "title": "Add Comment Inline",
        "category": "Code Review Notes",
        "icon": "$(comment-add)"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "codeReviewNotes",
          "name": "Code Review Notes",
          "when": "workspaceFolderCount > 0"
        },
        {
          "id": "allCodeReviewNotes",
          "name": "All Comments",
          "when": "workspaceFolderCount > 0"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "codeReviewNotes",
        "contents": "No comments found in the current file.\n[Add Comment](command:code-review-notes.addComment)",
        "when": "workspaceFolderCount > 0"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "code-review-notes.addComment",
          "when": "editorHasSelection",
          "group": "codeReview"
        }
      ],
      "view/title": [
        {
          "command": "code-review-notes.refreshComments",
          "when": "view == codeReviewNotes",
          "group": "navigation"
        },
        {
          "command": "code-review-notes.toggleCommentHighlights",
          "when": "view == codeReviewNotes",
          "group": "navigation"
        },
        {
          "command": "code-review-notes.toggleResolvedHighlights",
          "when": "view == codeReviewNotes",
          "group": "navigation"
        },
        {
          "command": "code-review-notes.createTestComments",
          "when": "view == codeReviewNotes",
          "group": "navigation"
        },
        {
          "command": "code-review-notes.syncComments",
          "when": "view == codeReviewNotes",
          "group": "navigation"
        },
        {
          "command": "code-review-notes.loadCommentsFromGit",
          "when": "view == codeReviewNotes",
          "group": "navigation"
        },
        {
          "command": "code-review-notes.showSyncMethodPicker",
          "when": "view == codeReviewNotes",
          "group": "sync@1"
        },
        {
          "command": "code-review-notes.performFullSync",
          "when": "view == codeReviewNotes",
          "group": "sync@2"
        },
        {
          "command": "code-review-notes.showAllComments",
          "when": "view == allCodeReviewNotes",
          "group": "navigation@1"
        },
        {
          "command": "code-review-notes.showResolvedComments",
          "when": "view == allCodeReviewNotes",
          "group": "navigation@2"
        },
        {
          "command": "code-review-notes.showUnresolvedComments",
          "when": "view == allCodeReviewNotes",
          "group": "navigation@3"
        }
      ],      "view/item/context": [
        {
          "command": "code-review-notes.replyToComment",
          "when": "view == codeReviewNotes && viewItem == comment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.resolveComment",
          "when": "view == codeReviewNotes && viewItem == comment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.deleteComment",
          "when": "view == codeReviewNotes && viewItem == comment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.unresolveComment",
          "when": "view == codeReviewNotes && viewItem == resolvedComment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.deleteComment",
          "when": "view == codeReviewNotes && viewItem == resolvedComment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.replyToComment",
          "when": "view == allCodeReviewNotes && viewItem == comment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.resolveComment",
          "when": "view == allCodeReviewNotes && viewItem == comment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.deleteComment",
          "when": "view == allCodeReviewNotes && viewItem == comment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.unresolveComment",
          "when": "view == allCodeReviewNotes && viewItem == resolvedComment",
          "group": "inline"
        },
        {
          "command": "code-review-notes.deleteComment",
          "when": "view == allCodeReviewNotes && viewItem == resolvedComment",
          "group": "inline"
        }
      ]
    },
    "keybindings": [
      {
        "command": "code-review-notes.addComment",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "editorTextFocus && editorHasSelection"
      }
    ],
    "configuration": {
      "title": "Code Review Notes",
      "properties": {
        "codeReviewNotes.defaultAuthor": {
          "type": "string",
          "default": "User",
          "description": "Default author name for comments and replies"
        },
        "codeReviewNotes.showResolvedCommentHighlights": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show highlights for resolved comments"
        },
        "codeReviewNotes.unresolvedCommentColor": {
          "type": "string",
          "default": "rgba(255, 193, 7, 0.15)",
          "description": "Background color for unresolved comment highlights"
        },
        "codeReviewNotes.resolvedCommentColor": {
          "type": "string",
          "default": "rgba(40, 167, 69, 0.12)",
          "description": "Background color for resolved comment highlights"
        },
        "codeReviewNotes.gitSyncEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic Git synchronization of comments"
        },
        "codeReviewNotes.gitSyncBranch": {
          "type": "string",
          "default": "main",
          "description": "Git branch to use for comment synchronization"
        },
        "codeReviewNotes.autoSyncOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Automatically sync comments when saving files"
        },
        "codeReviewNotes.syncMethod": {
          "type": "string",
          "enum": ["local", "git", "server"],
          "default": "local",
          "description": "Synchronization method: local (workspace only), git (Git repository), or server (remote server)"
        },
        "codeReviewNotes.serverUrl": {
          "type": "string",
          "default": "",
          "description": "Server URL for server-based synchronization (e.g., http://localhost:3000)"
        },
        "codeReviewNotes.serverAuthToken": {
          "type": "string",
          "default": "",
          "description": "Authentication token for server synchronization"
        },        "codeReviewNotes.enableRealTimeSync": {
          "type": "boolean",
          "default": false,
          "description": "Enable real-time synchronization for server-based sync (requires server support)"
        },
        "codeReviewNotes.notificationLevel": {
          "type": "string",
          "enum": ["none", "minimal", "verbose"],
          "default": "minimal",
          "description": "控制通知显示的级别：'none'不显示通知，'minimal'只显示重要通知，'verbose'显示所有通知"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "^1.100.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "uuid": "^11.1.0"
  }
}
